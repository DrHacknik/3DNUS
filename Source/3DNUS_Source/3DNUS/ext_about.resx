<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>